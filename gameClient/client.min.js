const getRoomType=e=>RegExp("room","ig").test(e)?"public":"private",isPrivateRoomNameValid=e=>{return"private"==(t=e,RegExp("room","ig").test(t)?"public":"private");var o};let socket=io();const canvas=document.getElementById("c"),context=canvas.getContext("2d");window.ctx=context;let round=1,roomsData=null,playersByIds=[],myId=null,myRoomNumber=null,myRoomId=null,myGameData=null,myGameDataStream=[],enemy=null,enemyContainer=null,playerA=null,playerAContainer=null,playerB=null,playerBContainer=null,app=null,keyInterval=null,up=null,down=null,left=null,right=null,sprites=new Image;sprites.src="assets/sprites.png";const enemyTanksPositions={x:240,"-x":161,y:208,"-y":130,1:0,2:16,3:32,4:48,5:64,6:80,7:96,8:112},playerPositions={x:95,"-x":50,y:65,"-y":0,A:0,B:129},enemyExplosionPosition={x:-50,y:-50};let gameNumber=null,scoresData=null;function drawEnemy(e,t){let o=e.size,n=e.position.x,a=e.position.y,l=(e.position.step>0?"":"-")+e.position.vector,r=t<9?enemyTanksPositions[String(t)]:enemyTanksPositions[String((8*Math.random(1)).toFixed(0))];context.drawImage(sprites,enemyTanksPositions[l],r,15,15,n,a,o,o)}function drawPlayer(e){let t=e.size,o=e.position.x,n=e.position.y,a=(e.position.step>0?"":"-")+e.position.vector,l=e.label;context.drawImage(sprites,playerPositions[a],playerPositions[l],15,15,o,n,t,t)}function createControls(){let e=[{label:"autoJoin",f:autoJoin,disabled:null!==getMyRoomId()},{label:"leaveRoom",f:leaveRoom,disabled:null===getMyRoomId()}],t=document.getElementById("controls");t.innerHTML="";for(let o=0;o<e.length;o++){let n=document.createElement("button");n.setAttribute("class","control"),n.addEventListener("click",(function(){e[o].f()})),n.disabled=e[o].disabled,n.innerText=e[o].label,t.appendChild(n)}document.getElementsByName("joinPrivate")[0].disabled=null!==getMyRoomId()}function createRoomsDataInfoPanel(e){createControls();let t=document.getElementById("rooms");t.innerHTML="";for(let o=0;o<e.amount;o++){let n=document.createElement("div");if(n.setAttribute("class","tile"),n.innerText=e.rooms[o].id,e.rooms[o].data.length<2){let e=document.createElement("span");e.innerText="1 spot empty",n.appendChild(e)}if(2===e.rooms[o].data.length){let e=document.createElement("span");e.innerText="Room full",n.appendChild(e)}if(e.rooms[o].id===getMyRoomId()){let e=document.createElement("span");e.innerText="This is my room",e.setAttribute("class","mine"),n.appendChild(e)}if("public"===e.rooms[o].type&&e.rooms[o].data.length<2&&null===getMyRoomId()){let t=document.createElement("button");t.setAttribute("class","joinRoom"),t.addEventListener("click",(function(){joinRoom(e.rooms[o].id)})),t.innerText="Join room "+e.rooms[o].id,n.appendChild(t)}let a=document.createElement("span");a.innerText=e.rooms[o].type.toUpperCase(),n.appendChild(a),t.appendChild(n)}document.getElementById("room").textContent=getMyRoomId(),document.getElementById("time").textContent=getMyGameTime(),document.getElementById("playerLabel").textContent=getMyGamePlayerLabel(),document.getElementById("players").textContent=getMyGamePlayers(),console.log("getMyRoomId()",getMyRoomId())}function joinRoom(e){socket.emit("joinRoomById",e)}function leaveRoom(e){let t=e||getMyRoomId();socket.emit("leaveRoomById",t)}function getMyRoomId(){let e=roomsData?roomsData.rooms.filter((e=>e.data&&e.data.sockets[myId])):[];return e[0]?e[0].id:null}function getMyGameTime(){return myGameData?parseInt(myGameData.time):0}function getMyGamePlayerLabel(){return myGameData?myGameData.players.filter((e=>e.id===myId))&&myGameData.players.filter((e=>e.id===myId))[0]&&myGameData.players.filter((e=>e.id===myId))[0].label:null}function getMyGamePlayers(){return myGameData?playersByIds.map((e=>e===myId?e+" (you)":e)).join(", "):null}function autoJoin(){getMyRoomId()?console.warn("Denied. You are already in room ",getMyRoomId()):socket.emit("autoJoin")}function joinPrivateGame(e){e.preventDefault();const t=document.querySelector("#private input").value;var o;""!==t.trim()&&"private"==(o=t,RegExp("room","ig").test(o)?"public":"private")?socket.emit("joinPrivate",t):alert("Illegal room name")}function clientSetup(){socket.on("connect",(function(){console.log("Connected with id ",socket.id),myId=socket.id})),socket.on("disconnect",(function(){console.log("Disconnected"),myGameData=null,document.getElementById("room").textContent=getMyRoomId(),document.getElementById("time").textContent=getMyGameTime(),document.getElementById("playerLabel").textContent=getMyGamePlayerLabel(),document.getElementById("players").textContent=getMyGamePlayers(),console.log("getMyRoomId()",getMyRoomId()),enemy=null,playerA=null,playerB=null,disableKeyboardControls()})),socket.on("connectedToRoom",(function(e){myRoomNumber=e,myRoomId=getMyRoomId(),document.getElementById("room").textContent=myRoomNumber,document.getElementById("playerLabel").textContent=getMyGamePlayerLabel(),console.log("Successfully connected to room number: ",myRoomNumber),console.log("Successfully connected to room id: ",myRoomId),enableKeyboardControls()})),socket.on("leftRoom",(function(e){context.clearRect(0,0,canvas.width,canvas.height),myGameData=null,console.log("Successfully left room: ",e),console.log("myGameDataStream",myGameDataStream),enemy=null,playerA=null,playerB=null,disableKeyboardControls(),myRoomId=getMyRoomId()})),socket.on("roomsData",(function(e){myRoomId=getMyRoomId(),console.log("roomsData",e),roomsData=e,createRoomsDataInfoPanel(e),document.getElementById("room").textContent=getMyRoomId();const t=e.rooms.filter((e=>e.id===getMyRoomId()))[0];playersByIds=t?Object.keys(t.data.sockets):[],playersByIds.forEach((e=>console.log("connected player id",e))),document.getElementById("playerLabel").textContent=getMyGamePlayerLabel(),document.getElementById("players").textContent=getMyGamePlayers()})),socket.on("nonBreakingError",(function(e){console.warn(e)})),socket.on("gameLoop",(function(e){myGameData?myGameData=e:(myGameData=e,document.getElementById("playerLabel").textContent=getMyGamePlayerLabel(),document.getElementById("players").textContent=getMyGamePlayers()),context.clearRect(0,0,canvas.width,canvas.height),document.getElementById("time").textContent!==getMyGameTime()&&(document.getElementById("time").textContent=getMyGameTime()),e.enemies.length&&e.enemies.forEach((e=>drawEnemy(e,round))),e.players.length&&e.players.forEach((e=>drawPlayer(e,round))),playerA&&drawEnemy(playerA)})),document.getElementById("private").addEventListener("submit",joinPrivateGame)}function keyboard(e){let t={};t.value=e,t.isDown=!1,t.isUp=!0,t.press=void 0,t.release=void 0,t.downHandler=e=>{e.key===t.value&&(t.isUp&&t.press&&t.press(),t.isDown=!0,t.isUp=!1,e.preventDefault())},t.upHandler=e=>{e.key===t.value&&(t.isDown&&t.release&&t.release(),t.isDown=!1,t.isUp=!0,e.preventDefault())};const o=t.downHandler.bind(t),n=t.upHandler.bind(t);return window.addEventListener("keydown",o,!1),window.addEventListener("keyup",n,!1),t.unsubscribe=()=>{window.removeEventListener("keydown",o),window.removeEventListener("keyup",n)},t}function enableKeyboardControls(){myRoomId=getMyRoomId(),left=keyboard("ArrowLeft"),up=keyboard("ArrowUp"),right=keyboard("ArrowRight"),down=keyboard("ArrowDown"),left.press=()=>{const e={roomId:getMyRoomId(),vector:"x",step:-1};clearInterval(keyInterval),keyInterval=setInterval((()=>socket.emit("playerMove",e)),1e3/30)},left.release=()=>{clearInterval(keyInterval)},right.press=()=>{const e={roomId:getMyRoomId(),vector:"x",step:1};clearInterval(keyInterval),keyInterval=setInterval((()=>socket.emit("playerMove",e)),1e3/30)},right.release=()=>{clearInterval(keyInterval)},down.press=()=>{const e={roomId:getMyRoomId(),vector:"y",step:1};clearInterval(keyInterval),keyInterval=setInterval((()=>socket.emit("playerMove",e)),1e3/30)},down.release=()=>{clearInterval(keyInterval)},up.press=()=>{const e={roomId:getMyRoomId(),vector:"y",step:-1};clearInterval(keyInterval),keyInterval=setInterval((()=>socket.emit("playerMove",e)),1e3/30)},up.release=()=>{clearInterval(keyInterval)}}function disableKeyboardControls(){clearInterval(keyInterval),up.unsubscribe(),down.unsubscribe(),left.unsubscribe(),right.unsubscribe()}clientSetup();